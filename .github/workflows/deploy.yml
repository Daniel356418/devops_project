name: Build and Deploy to AKS

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io
  IMAGE_NAME: devops-webapp
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Test application
      run: |
        pip install -r requirements.txt
        python -c "import flask; print('Flask imported successfully')"

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to Container Registry
      run: |
        az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}
        
    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
    - name: Deploy to AKS
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing
        kubectl set image deployment/devops-webapp webapp=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --record
        kubectl rollout status deployment/devops-webapp
        
    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services